// <auto-generated />
using System;
using Dierentuin.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dierentuin.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250313163720_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnimalAnimal", b =>
                {
                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("PreyId")
                        .HasColumnType("int");

                    b.HasKey("AnimalId", "PreyId");

                    b.HasIndex("PreyId");

                    b.ToTable("AnimalAnimal");
                });

            modelBuilder.Entity("Dierentuin.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityPattern")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("DietaryClass")
                        .HasColumnType("int");

                    b.Property<int?>("EnclosureId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAwake")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecurityRequirement")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<double>("SpaceRequirement")
                        .HasColumnType("float");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZooId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("EnclosureId");

                    b.HasIndex("ZooId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivityPattern = 0,
                            CategoryId = 4,
                            DietaryClass = 1,
                            EnclosureId = 4,
                            IsAwake = false,
                            Name = "Ova",
                            SecurityRequirement = 2,
                            Size = 2,
                            SpaceRequirement = 6.6255988682813198,
                            Species = "Small Rubber Towels"
                        },
                        new
                        {
                            Id = 2,
                            ActivityPattern = 0,
                            DietaryClass = 4,
                            EnclosureId = 2,
                            IsAwake = true,
                            Name = "Franco",
                            SecurityRequirement = 2,
                            Size = 3,
                            SpaceRequirement = 32.915255617942101,
                            Species = "Small Cotton Cheese"
                        },
                        new
                        {
                            Id = 3,
                            ActivityPattern = 1,
                            CategoryId = 4,
                            DietaryClass = 1,
                            EnclosureId = 1,
                            IsAwake = false,
                            Name = "Jeromy",
                            SecurityRequirement = 1,
                            Size = 4,
                            SpaceRequirement = 35.968096386475764,
                            Species = "Licensed Soft Car"
                        },
                        new
                        {
                            Id = 4,
                            ActivityPattern = 0,
                            CategoryId = 5,
                            DietaryClass = 1,
                            IsAwake = false,
                            Name = "Ole",
                            SecurityRequirement = 0,
                            Size = 4,
                            SpaceRequirement = 45.080924441386031,
                            Species = "Fantastic Frozen Salad"
                        },
                        new
                        {
                            Id = 5,
                            ActivityPattern = 0,
                            DietaryClass = 1,
                            IsAwake = true,
                            Name = "Marianne",
                            SecurityRequirement = 0,
                            Size = 5,
                            SpaceRequirement = 2.0121173016563718,
                            Species = "Licensed Frozen Chips"
                        },
                        new
                        {
                            Id = 6,
                            ActivityPattern = 1,
                            CategoryId = 5,
                            DietaryClass = 1,
                            EnclosureId = 1,
                            IsAwake = false,
                            Name = "Angelo",
                            SecurityRequirement = 2,
                            Size = 0,
                            SpaceRequirement = 11.036909445021319,
                            Species = "Awesome Wooden Shoes"
                        },
                        new
                        {
                            Id = 7,
                            ActivityPattern = 0,
                            CategoryId = 5,
                            DietaryClass = 1,
                            IsAwake = true,
                            Name = "Cecelia",
                            SecurityRequirement = 2,
                            Size = 3,
                            SpaceRequirement = 43.406071383183786,
                            Species = "Small Cotton Computer"
                        },
                        new
                        {
                            Id = 8,
                            ActivityPattern = 0,
                            DietaryClass = 0,
                            EnclosureId = 2,
                            IsAwake = false,
                            Name = "Rudolph",
                            SecurityRequirement = 1,
                            Size = 0,
                            SpaceRequirement = 47.995743945981722,
                            Species = "Ergonomic Fresh Shirt"
                        },
                        new
                        {
                            Id = 9,
                            ActivityPattern = 0,
                            DietaryClass = 4,
                            IsAwake = true,
                            Name = "Rashad",
                            SecurityRequirement = 2,
                            Size = 2,
                            SpaceRequirement = 18.356800654888801,
                            Species = "Refined Fresh Chair"
                        },
                        new
                        {
                            Id = 10,
                            ActivityPattern = 1,
                            CategoryId = 5,
                            DietaryClass = 4,
                            EnclosureId = 4,
                            IsAwake = true,
                            Name = "Margaret",
                            SecurityRequirement = 1,
                            Size = 3,
                            SpaceRequirement = 24.295974835702737,
                            Species = "Handmade Rubber Table"
                        },
                        new
                        {
                            Id = 11,
                            ActivityPattern = 1,
                            DietaryClass = 1,
                            EnclosureId = 1,
                            IsAwake = false,
                            Name = "Fredrick",
                            SecurityRequirement = 2,
                            Size = 3,
                            SpaceRequirement = 15.261966761217915,
                            Species = "Generic Wooden Pizza"
                        },
                        new
                        {
                            Id = 12,
                            ActivityPattern = 0,
                            DietaryClass = 3,
                            IsAwake = true,
                            Name = "Jace",
                            SecurityRequirement = 0,
                            Size = 4,
                            SpaceRequirement = 6.2873170494429145,
                            Species = "Intelligent Rubber Mouse"
                        },
                        new
                        {
                            Id = 13,
                            ActivityPattern = 2,
                            CategoryId = 1,
                            DietaryClass = 2,
                            EnclosureId = 3,
                            IsAwake = true,
                            Name = "Queen",
                            SecurityRequirement = 0,
                            Size = 4,
                            SpaceRequirement = 10.665850194973547,
                            Species = "Ergonomic Wooden Computer"
                        },
                        new
                        {
                            Id = 14,
                            ActivityPattern = 2,
                            CategoryId = 1,
                            DietaryClass = 2,
                            EnclosureId = 1,
                            IsAwake = false,
                            Name = "Isaac",
                            SecurityRequirement = 0,
                            Size = 4,
                            SpaceRequirement = 37.016702220449844,
                            Species = "Gorgeous Plastic Mouse"
                        },
                        new
                        {
                            Id = 15,
                            ActivityPattern = 0,
                            CategoryId = 5,
                            DietaryClass = 1,
                            EnclosureId = 3,
                            IsAwake = true,
                            Name = "Laney",
                            SecurityRequirement = 1,
                            Size = 2,
                            SpaceRequirement = 5.2729475521702005,
                            Species = "Refined Soft Chips"
                        });
                });

            modelBuilder.Entity("Dierentuin.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Zoogdieren"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Vogels"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Reptielen"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Insecten"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Amfibieën"
                        });
                });

            modelBuilder.Entity("Dierentuin.Models.Enclosure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Climate")
                        .HasColumnType("int");

                    b.Property<int>("HabitatType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecurityLevel")
                        .HasColumnType("int");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<int?>("ZooId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZooId");

                    b.ToTable("Enclosures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Climate = 1,
                            HabitatType = 4,
                            Name = "Verblijf Automotive",
                            SecurityLevel = 2,
                            Size = 63.919591142295523
                        },
                        new
                        {
                            Id = 2,
                            Climate = 1,
                            HabitatType = 0,
                            Name = "Verblijf Home",
                            SecurityLevel = 1,
                            Size = 249.46460679983841
                        },
                        new
                        {
                            Id = 3,
                            Climate = 1,
                            HabitatType = 4,
                            Name = "Verblijf Sports",
                            SecurityLevel = 0,
                            Size = 499.29931112016925
                        },
                        new
                        {
                            Id = 4,
                            Climate = 0,
                            HabitatType = 8,
                            Name = "Verblijf Jewelery & Grocery",
                            SecurityLevel = 0,
                            Size = 90.954737469493537
                        });
                });

            modelBuilder.Entity("Dierentuin.Models.Zoo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zoos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bogus Dierentuin"
                        });
                });

            modelBuilder.Entity("AnimalAnimal", b =>
                {
                    b.HasOne("Dierentuin.Models.Animal", null)
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dierentuin.Models.Animal", null)
                        .WithMany()
                        .HasForeignKey("PreyId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dierentuin.Models.Animal", b =>
                {
                    b.HasOne("Dierentuin.Models.Category", "Category")
                        .WithMany("Animals")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Dierentuin.Models.Enclosure", "Enclosure")
                        .WithMany("Animals")
                        .HasForeignKey("EnclosureId");

                    b.HasOne("Dierentuin.Models.Zoo", null)
                        .WithMany("AllAnimals")
                        .HasForeignKey("ZooId");

                    b.Navigation("Category");

                    b.Navigation("Enclosure");
                });

            modelBuilder.Entity("Dierentuin.Models.Enclosure", b =>
                {
                    b.HasOne("Dierentuin.Models.Zoo", null)
                        .WithMany("Enclosures")
                        .HasForeignKey("ZooId");
                });

            modelBuilder.Entity("Dierentuin.Models.Category", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Dierentuin.Models.Enclosure", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Dierentuin.Models.Zoo", b =>
                {
                    b.Navigation("AllAnimals");

                    b.Navigation("Enclosures");
                });
#pragma warning restore 612, 618
        }
    }
}
